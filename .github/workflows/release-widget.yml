name: Release Widget

on:
  push:
    branches:
      - gh-pages
    paths:
      - 'widget/**' # Trigger when files in the widget folder change

permissions:
  contents: write

jobs:
  create-release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Fetch all history to get the latest tag
          ref: gh-pages

      - name: Check commit message
        id: check-commit
        run: |
          if [[ ! "$(git log -1 --pretty=%B)" =~ ^release:[[:space:]]v[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "This is not a release commit. Skipping."
            exit 1
          fi

      - name: Get repository name
        id: repo-name
        run: |
          echo "REPO_NAME=$(basename $GITHUB_REPOSITORY)" >> $GITHUB_ENV

      - name: Get next release number
        id: get-release-number
        run: |
          # Extract the version number from the commit message
          RELEASE_VERSION=$(git log -1 --pretty=%B | grep -oP '(?<=release: v)[0-9]+\.[0-9]+\.[0-9]+')
          echo "RELEASE_VERSION=$RELEASE_VERSION" >> $GITHUB_ENV

      - name: Rename widget folder
        run: |
          mv widget $REPO_NAME

      - name: Create zip file
        run: |
          ZIP_FILE_NAME="$REPO_NAME-v$RELEASE_VERSION.zip"
          zip -r $ZIP_FILE_NAME $REPO_NAME
          echo "ZIP_FILE_NAME=$ZIP_FILE_NAME" >> $GITHUB_ENV

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: 'v${{ env.RELEASE_VERSION }}'
          release_name: '${{ env.REPO_NAME }} v${{ env.RELEASE_VERSION }}'
          draft: false
          prerelease: false

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ env.ZIP_FILE_NAME }}
          asset_name: ${{ env.ZIP_FILE_NAME }}
          asset_content_type: application/zip
